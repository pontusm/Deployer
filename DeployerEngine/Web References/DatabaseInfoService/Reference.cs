//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace DeployerEngine.DatabaseInfoService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DatabaseInfoSoap", Namespace="http://gws.husqvarna.com/webservices/")]
    public partial class DatabaseInfo : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ExecuteDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteNonQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTableInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetViewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetViewInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetViewSourceCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProceduresOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcedureSourceCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFunctionSourceCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShutdownSessionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DatabaseInfo() {
            this.Url = "http://localhost/ServiceWeb/DatabaseInfo.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ExecuteDataSetCompletedEventHandler ExecuteDataSetCompleted;
        
        /// <remarks/>
        public event ExecuteNonQueryCompletedEventHandler ExecuteNonQueryCompleted;
        
        /// <remarks/>
        public event GetTablesCompletedEventHandler GetTablesCompleted;
        
        /// <remarks/>
        public event GetTableInfoCompletedEventHandler GetTableInfoCompleted;
        
        /// <remarks/>
        public event GetViewsCompletedEventHandler GetViewsCompleted;
        
        /// <remarks/>
        public event GetViewInfoCompletedEventHandler GetViewInfoCompleted;
        
        /// <remarks/>
        public event GetViewSourceCodeCompletedEventHandler GetViewSourceCodeCompleted;
        
        /// <remarks/>
        public event GetProceduresCompletedEventHandler GetProceduresCompleted;
        
        /// <remarks/>
        public event GetProcedureSourceCodeCompletedEventHandler GetProcedureSourceCodeCompleted;
        
        /// <remarks/>
        public event GetFunctionSourceCodeCompletedEventHandler GetFunctionSourceCodeCompleted;
        
        /// <remarks/>
        public event StartSessionCompletedEventHandler StartSessionCompleted;
        
        /// <remarks/>
        public event ShutdownSessionCompletedEventHandler ShutdownSessionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gws.husqvarna.com/webservices/ExecuteDataSet", RequestNamespace="http://gws.husqvarna.com/webservices/", ResponseNamespace="http://gws.husqvarna.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ExecuteDataSet(string query) {
            object[] results = this.Invoke("ExecuteDataSet", new object[] {
                        query});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginExecuteDataSet(string query, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ExecuteDataSet", new object[] {
                        query}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndExecuteDataSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteDataSetAsync(string query) {
            this.ExecuteDataSetAsync(query, null);
        }
        
        /// <remarks/>
        public void ExecuteDataSetAsync(string query, object userState) {
            if ((this.ExecuteDataSetOperationCompleted == null)) {
                this.ExecuteDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteDataSetOperationCompleted);
            }
            this.InvokeAsync("ExecuteDataSet", new object[] {
                        query}, this.ExecuteDataSetOperationCompleted, userState);
        }
        
        private void OnExecuteDataSetOperationCompleted(object arg) {
            if ((this.ExecuteDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteDataSetCompleted(this, new ExecuteDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gws.husqvarna.com/webservices/ExecuteNonQuery", RequestNamespace="http://gws.husqvarna.com/webservices/", ResponseNamespace="http://gws.husqvarna.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExecuteNonQuery(string query) {
            this.Invoke("ExecuteNonQuery", new object[] {
                        query});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginExecuteNonQuery(string query, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ExecuteNonQuery", new object[] {
                        query}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndExecuteNonQuery(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ExecuteNonQueryAsync(string query) {
            this.ExecuteNonQueryAsync(query, null);
        }
        
        /// <remarks/>
        public void ExecuteNonQueryAsync(string query, object userState) {
            if ((this.ExecuteNonQueryOperationCompleted == null)) {
                this.ExecuteNonQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteNonQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteNonQuery", new object[] {
                        query}, this.ExecuteNonQueryOperationCompleted, userState);
        }
        
        private void OnExecuteNonQueryOperationCompleted(object arg) {
            if ((this.ExecuteNonQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteNonQueryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gws.husqvarna.com/webservices/GetTables", RequestNamespace="http://gws.husqvarna.com/webservices/", ResponseNamespace="http://gws.husqvarna.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTables() {
            object[] results = this.Invoke("GetTables", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTables(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTables", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTables(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTablesAsync() {
            this.GetTablesAsync(null);
        }
        
        /// <remarks/>
        public void GetTablesAsync(object userState) {
            if ((this.GetTablesOperationCompleted == null)) {
                this.GetTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTablesOperationCompleted);
            }
            this.InvokeAsync("GetTables", new object[0], this.GetTablesOperationCompleted, userState);
        }
        
        private void OnGetTablesOperationCompleted(object arg) {
            if ((this.GetTablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTablesCompleted(this, new GetTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gws.husqvarna.com/webservices/GetTableInfo", RequestNamespace="http://gws.husqvarna.com/webservices/", ResponseNamespace="http://gws.husqvarna.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTableInfo(string tableName) {
            object[] results = this.Invoke("GetTableInfo", new object[] {
                        tableName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTableInfo(string tableName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTableInfo", new object[] {
                        tableName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTableInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTableInfoAsync(string tableName) {
            this.GetTableInfoAsync(tableName, null);
        }
        
        /// <remarks/>
        public void GetTableInfoAsync(string tableName, object userState) {
            if ((this.GetTableInfoOperationCompleted == null)) {
                this.GetTableInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTableInfoOperationCompleted);
            }
            this.InvokeAsync("GetTableInfo", new object[] {
                        tableName}, this.GetTableInfoOperationCompleted, userState);
        }
        
        private void OnGetTableInfoOperationCompleted(object arg) {
            if ((this.GetTableInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTableInfoCompleted(this, new GetTableInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gws.husqvarna.com/webservices/GetViews", RequestNamespace="http://gws.husqvarna.com/webservices/", ResponseNamespace="http://gws.husqvarna.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetViews() {
            object[] results = this.Invoke("GetViews", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetViews(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetViews", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetViews(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetViewsAsync() {
            this.GetViewsAsync(null);
        }
        
        /// <remarks/>
        public void GetViewsAsync(object userState) {
            if ((this.GetViewsOperationCompleted == null)) {
                this.GetViewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetViewsOperationCompleted);
            }
            this.InvokeAsync("GetViews", new object[0], this.GetViewsOperationCompleted, userState);
        }
        
        private void OnGetViewsOperationCompleted(object arg) {
            if ((this.GetViewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetViewsCompleted(this, new GetViewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gws.husqvarna.com/webservices/GetViewInfo", RequestNamespace="http://gws.husqvarna.com/webservices/", ResponseNamespace="http://gws.husqvarna.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetViewInfo(string viewName) {
            object[] results = this.Invoke("GetViewInfo", new object[] {
                        viewName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetViewInfo(string viewName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetViewInfo", new object[] {
                        viewName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetViewInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetViewInfoAsync(string viewName) {
            this.GetViewInfoAsync(viewName, null);
        }
        
        /// <remarks/>
        public void GetViewInfoAsync(string viewName, object userState) {
            if ((this.GetViewInfoOperationCompleted == null)) {
                this.GetViewInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetViewInfoOperationCompleted);
            }
            this.InvokeAsync("GetViewInfo", new object[] {
                        viewName}, this.GetViewInfoOperationCompleted, userState);
        }
        
        private void OnGetViewInfoOperationCompleted(object arg) {
            if ((this.GetViewInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetViewInfoCompleted(this, new GetViewInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gws.husqvarna.com/webservices/GetViewSourceCode", RequestNamespace="http://gws.husqvarna.com/webservices/", ResponseNamespace="http://gws.husqvarna.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetViewSourceCode(string viewName) {
            object[] results = this.Invoke("GetViewSourceCode", new object[] {
                        viewName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetViewSourceCode(string viewName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetViewSourceCode", new object[] {
                        viewName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetViewSourceCode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetViewSourceCodeAsync(string viewName) {
            this.GetViewSourceCodeAsync(viewName, null);
        }
        
        /// <remarks/>
        public void GetViewSourceCodeAsync(string viewName, object userState) {
            if ((this.GetViewSourceCodeOperationCompleted == null)) {
                this.GetViewSourceCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetViewSourceCodeOperationCompleted);
            }
            this.InvokeAsync("GetViewSourceCode", new object[] {
                        viewName}, this.GetViewSourceCodeOperationCompleted, userState);
        }
        
        private void OnGetViewSourceCodeOperationCompleted(object arg) {
            if ((this.GetViewSourceCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetViewSourceCodeCompleted(this, new GetViewSourceCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gws.husqvarna.com/webservices/GetProcedures", RequestNamespace="http://gws.husqvarna.com/webservices/", ResponseNamespace="http://gws.husqvarna.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProcedures() {
            object[] results = this.Invoke("GetProcedures", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProcedures(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProcedures", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetProcedures(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProceduresAsync() {
            this.GetProceduresAsync(null);
        }
        
        /// <remarks/>
        public void GetProceduresAsync(object userState) {
            if ((this.GetProceduresOperationCompleted == null)) {
                this.GetProceduresOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProceduresOperationCompleted);
            }
            this.InvokeAsync("GetProcedures", new object[0], this.GetProceduresOperationCompleted, userState);
        }
        
        private void OnGetProceduresOperationCompleted(object arg) {
            if ((this.GetProceduresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProceduresCompleted(this, new GetProceduresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gws.husqvarna.com/webservices/GetProcedureSourceCode", RequestNamespace="http://gws.husqvarna.com/webservices/", ResponseNamespace="http://gws.husqvarna.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProcedureSourceCode(string procedureName) {
            object[] results = this.Invoke("GetProcedureSourceCode", new object[] {
                        procedureName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProcedureSourceCode(string procedureName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProcedureSourceCode", new object[] {
                        procedureName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetProcedureSourceCode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcedureSourceCodeAsync(string procedureName) {
            this.GetProcedureSourceCodeAsync(procedureName, null);
        }
        
        /// <remarks/>
        public void GetProcedureSourceCodeAsync(string procedureName, object userState) {
            if ((this.GetProcedureSourceCodeOperationCompleted == null)) {
                this.GetProcedureSourceCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcedureSourceCodeOperationCompleted);
            }
            this.InvokeAsync("GetProcedureSourceCode", new object[] {
                        procedureName}, this.GetProcedureSourceCodeOperationCompleted, userState);
        }
        
        private void OnGetProcedureSourceCodeOperationCompleted(object arg) {
            if ((this.GetProcedureSourceCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcedureSourceCodeCompleted(this, new GetProcedureSourceCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gws.husqvarna.com/webservices/GetFunctionSourceCode", RequestNamespace="http://gws.husqvarna.com/webservices/", ResponseNamespace="http://gws.husqvarna.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFunctionSourceCode(string functionName) {
            object[] results = this.Invoke("GetFunctionSourceCode", new object[] {
                        functionName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFunctionSourceCode(string functionName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFunctionSourceCode", new object[] {
                        functionName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetFunctionSourceCode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFunctionSourceCodeAsync(string functionName) {
            this.GetFunctionSourceCodeAsync(functionName, null);
        }
        
        /// <remarks/>
        public void GetFunctionSourceCodeAsync(string functionName, object userState) {
            if ((this.GetFunctionSourceCodeOperationCompleted == null)) {
                this.GetFunctionSourceCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFunctionSourceCodeOperationCompleted);
            }
            this.InvokeAsync("GetFunctionSourceCode", new object[] {
                        functionName}, this.GetFunctionSourceCodeOperationCompleted, userState);
        }
        
        private void OnGetFunctionSourceCodeOperationCompleted(object arg) {
            if ((this.GetFunctionSourceCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFunctionSourceCodeCompleted(this, new GetFunctionSourceCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gws.husqvarna.com/webservices/StartSession", RequestNamespace="http://gws.husqvarna.com/webservices/", ResponseNamespace="http://gws.husqvarna.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StartSession(System.Guid token, string databaseName) {
            this.Invoke("StartSession", new object[] {
                        token,
                        databaseName});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStartSession(System.Guid token, string databaseName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StartSession", new object[] {
                        token,
                        databaseName}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndStartSession(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void StartSessionAsync(System.Guid token, string databaseName) {
            this.StartSessionAsync(token, databaseName, null);
        }
        
        /// <remarks/>
        public void StartSessionAsync(System.Guid token, string databaseName, object userState) {
            if ((this.StartSessionOperationCompleted == null)) {
                this.StartSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartSessionOperationCompleted);
            }
            this.InvokeAsync("StartSession", new object[] {
                        token,
                        databaseName}, this.StartSessionOperationCompleted, userState);
        }
        
        private void OnStartSessionOperationCompleted(object arg) {
            if ((this.StartSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gws.husqvarna.com/webservices/ShutdownSession", RequestNamespace="http://gws.husqvarna.com/webservices/", ResponseNamespace="http://gws.husqvarna.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ShutdownSession() {
            this.Invoke("ShutdownSession", new object[0]);
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginShutdownSession(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ShutdownSession", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndShutdownSession(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ShutdownSessionAsync() {
            this.ShutdownSessionAsync(null);
        }
        
        /// <remarks/>
        public void ShutdownSessionAsync(object userState) {
            if ((this.ShutdownSessionOperationCompleted == null)) {
                this.ShutdownSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShutdownSessionOperationCompleted);
            }
            this.InvokeAsync("ShutdownSession", new object[0], this.ShutdownSessionOperationCompleted, userState);
        }
        
        private void OnShutdownSessionOperationCompleted(object arg) {
            if ((this.ShutdownSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShutdownSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExecuteDataSetCompletedEventHandler(object sender, ExecuteDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExecuteNonQueryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTablesCompletedEventHandler(object sender, GetTablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTableInfoCompletedEventHandler(object sender, GetTableInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTableInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTableInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetViewsCompletedEventHandler(object sender, GetViewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetViewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetViewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetViewInfoCompletedEventHandler(object sender, GetViewInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetViewInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetViewInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetViewSourceCodeCompletedEventHandler(object sender, GetViewSourceCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetViewSourceCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetViewSourceCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProceduresCompletedEventHandler(object sender, GetProceduresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProceduresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProceduresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProcedureSourceCodeCompletedEventHandler(object sender, GetProcedureSourceCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcedureSourceCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcedureSourceCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFunctionSourceCodeCompletedEventHandler(object sender, GetFunctionSourceCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFunctionSourceCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFunctionSourceCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StartSessionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ShutdownSessionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591